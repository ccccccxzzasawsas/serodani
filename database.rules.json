{
  "rules": {
    ".read": true,
    ".write": "auth != null && (root.child('admins').child(auth.email.replace('.', ',')).exists() || (root.child('users').child(auth.uid).exists() && root.child('users').child(auth.uid).child('isAdmin').val() === true))",
    
    "bookings": {
      ".read": true,
      
      "$bookingId": {
        ".write": "auth != null && (!data.exists() || (root.child('admins').child(auth.email.replace('.', ',')).exists() || (root.child('users').child(auth.uid).exists() && root.child('users').child(auth.uid).child('isAdmin').val() === true)))",
        
        "status": {
          ".validate": "newData.exists() && auth != null && (root.child('admins').child(auth.email.replace('.', ',')).exists() || (root.child('users').child(auth.uid).exists() && root.child('users').child(auth.uid).child('isAdmin').val() === true))"
        },
        
        ".validate": "auth != null && ((!newData.exists() && data.exists() && (data.child('guestEmail').val() == auth.email || root.child('admins').child(auth.email.replace('.', ',')).exists() || (root.child('users').child(auth.uid).exists() && root.child('users').child(auth.uid).child('isAdmin').val() === true))) || newData.exists())"
      }
    }
  },
  
  "functions": {
    "isAdmin": "auth != null && (root.child('admins').child(auth.email.replace('.', ',')).exists() || (root.child('users').child(auth.uid).exists() && root.child('users').child(auth.uid).child('isAdmin').val() === true))"
  }
} 